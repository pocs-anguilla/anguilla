# Based on: https://github.com/joerick/cibuildwheel/blob/master/examples/github-deploy.yml
name: Wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - develop
    tags:
      - v*

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: python -m pip install build
      - name: Build tarball
        run: python -m build --sdist

      - uses: actions/upload-artifact@v2
        with:
          name: tarball
          path: dist/*

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - if: matrix.os == 'windows-latest'
        uses: microsoft/setup-msbuild@v1.0.2

      - uses: joerick/cibuildwheel@v1.10.0
        env:
          # Skip: unsupported Python versions, PyPy and 32-bit versions
          CIBW_SKIP: "cp27-* cp35-* cp36-* pp* *-win32 *-manylinux_i686"
          MACOSX_DEPLOYMENT_TARGET: "10.15"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_DEPENDENCY_VERSIONS: "latest"
          CIBW_TEST_REQUIRES: pytest coverage[toml] pytest-cov
          CIBW_TEST_COMMAND_LINUX: "pytest {project}/tests --import-mode=append --color=yes --cov=anguilla --cov-report=xml && mkdir -p /output && mv coverage.xml /output"
          CIBW_TEST_COMMAND_MACOS: "pytest {project}/tests --import-mode=append --color=yes --cov=anguilla"
          CIBW_TEST_COMMAND_WINDOWS: "pytest {project}/tests --import-mode=append --color=yes --cov=anguilla"
          CIBW_BEFORE_ALL_MACOS: "unset __PYVENV_LAUNCHER__"
          CIBW_BEFORE_ALL_WINDOWS: "pip install delvewheel"
          # See: https://github.com/joerick/cibuildwheel/issues/459
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: >-
            delvewheel repair
            -v
            --wheel-dir={dest_dir}
            {wheel}
          # Skip testing in Windows + Python 3.8+ due to DLL loading issues.
          CIBW_TEST_SKIP: "cp3{8,9}-win_amd64"

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./wheelhouse/*.whl

      - uses: actions/upload-artifact@v2
        if: matrix.os == 'ubuntu-latest'
        with:
          name: coverage_file
          path: ./wheelhouse/coverage.xml

  update_coverage:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: coverage_file
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true

  upload_pypi:
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: dist
      - uses: actions/download-artifact@v2
        with:
          name: tarball
          path: dist
      - uses: pypa/gh-action-pypi-publish@master
        with:
          skip_existing: true
          user: __token__
          password: ${{ secrets.PYPI_TEST_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
